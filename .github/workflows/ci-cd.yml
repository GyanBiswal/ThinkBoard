# This is just the name of your workflow — it helps you identify it in GitHub.
name: Build and Push Docker Images 


# This tells GitHub when to run the workflow. Here, it means: Run this workflow every time someone pushes (uploads) code to the main branch.
on:
  push:
    branches:
      - main

# Jobs are groups of steps GitHub runs. It will run on a virtual computer (runner) with Ubuntu Linux. When you push code and GitHub triggers your workflow, GitHub needs a place to execute all those steps (like building Docker images, running tests, etc.). It provides a runner — a temporary virtual computer — to do this.
jobs:
  build_and_push:
    runs-on: ubuntu-latest

    # First, it copies your code from the GitHub repo to the runner, so the runner can work with your files.
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
    
      # Next, it logs in to Docker Hub using your credentials stored securely as GitHub secrets. This is needed so the runner can push your Docker images to Docker Hub.
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Now, it builds your backend Docker image from the backend folder (context). Then, it pushes that image to Docker Hub with the tag: yourusername/thinkboard-backend:latest.
      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/thinkboard-backend:latest

      # Similarly, it builds your frontend Docker image from the frontend folder. Then pushes that image to Docker Hub with the tag: yourusername/thinkboard-frontend:latest.
      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/thinkboard-frontend:latest
